/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.82
 * Generated at: 2023-11-25 12:01:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class Inquire_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>여행사 홈페이지</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        /* 기본 스타일 */\r\n");
      out.write("        body, nav a {\r\n");
      out.write("            font-family: 'Arial', sans-serif;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        body {\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("            background-color: #f4f4f4;\r\n");
      out.write("            color: #333;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* 헤더 스타일 */\r\n");
      out.write("        header {\r\n");
      out.write("            background-color: #333;\r\n");
      out.write("            color: #fff;\r\n");
      out.write("            padding: 15px 0;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* 네비게이션 스타일 */\r\n");
      out.write("        nav {\r\n");
      out.write("            background-color: #444;\r\n");
      out.write("            overflow: visible;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            justify-content: space-between;\r\n");
      out.write("            padding: 0 20px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        nav a {\r\n");
      out.write("            color: white;\r\n");
      out.write("            padding: 14px 16px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .left-nav, .right-nav {\r\n");
      out.write("            display: flex;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .right-nav {\r\n");
      out.write("            margin-left: auto;\r\n");
      out.write("            flex-flow: row wrap;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* 섹션 스타일 */\r\n");
      out.write("        section {\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            margin: 20px;\r\n");
      out.write("            background-color: #fff;\r\n");
      out.write("            border-radius: 8px;\r\n");
      out.write("            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* 테이블 스타일 */\r\n");
      out.write("        table {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            border-collapse: collapse;\r\n");
      out.write("            margin: 20px 0;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        th, td {\r\n");
      out.write("            border: 1px solid #ddd;\r\n");
      out.write("            padding: 15px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        th {\r\n");
      out.write("            background-color: #f2f2f2;\r\n");
      out.write("            color: black;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        tr:hover {\r\n");
      out.write("            background-color: #f5f5f5;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* 푸터 스타일 */\r\n");
      out.write("        footer {\r\n");
      out.write("            background-color: #333;\r\n");
      out.write("            color: #fff;\r\n");
      out.write("            padding: 10px 0;\r\n");
      out.write("            position: fixed;\r\n");
      out.write("            bottom: 0;\r\n");
      out.write("            width: 100%;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* 버튼 스타일 */\r\n");
      out.write("        button {\r\n");
      out.write("            display: block;\r\n");
      out.write("            width: 200px;\r\n");
      out.write("            height: 40px;\r\n");
      out.write("            margin: 20px auto;\r\n");
      out.write("            background-color: #333;\r\n");
      out.write("            color: #fff;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* 드롭다운 메뉴 스타일 */\r\n");
      out.write("        .dropdown {\r\n");
      out.write("            position: relative;\r\n");
      out.write("            display: inline-block;\r\n");
      out.write("            align-self: center;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .dropdown-content {\r\n");
      out.write("            display: none;\r\n");
      out.write("            position: absolute;\r\n");
      out.write("            right: 0;\r\n");
      out.write("            background-color: #f9f9f9;\r\n");
      out.write("            min-width: 160px;\r\n");
      out.write("            box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\r\n");
      out.write("            z-index: 1000;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .dropdown-content a {\r\n");
      out.write("            color: black;\r\n");
      out.write("            padding: 12px 16px;\r\n");
      out.write("            display: block;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .dropdown-content a:hover {\r\n");
      out.write("            background-color: #f1f1f1;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .dropdown:hover .dropdown-content {\r\n");
      out.write("            display: block;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("    	.button-container {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            justify-content: space-between;\r\n");
      out.write("            margin: 20px 0;\r\n");
      out.write("            align-items: flex-end;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .button-container button {\r\n");
      out.write("            width: 100px;\r\n");
      out.write("            height: 40px;\r\n");
      out.write("            background-color: #333;\r\n");
      out.write("            color: #fff;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .button-left {\r\n");
      out.write("            margin-right: auto;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .button-right {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            justify-content: flex-end;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .button-container {\r\n");
      out.write("    		flex-direction: column;\r\n");
      out.write("    		align-items: flex-start;\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		.button-left {\r\n");
      out.write("    		margin-right: 0;\r\n");
      out.write("    		margin-bottom: 10px;\r\n");
      out.write("		}\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
 
        String username = null;
        if (session != null) {
            username = (String) session.getAttribute("username");
        }
    
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <!-- 헤더 -->\r\n");
      out.write("    <header>\r\n");
      out.write("        <h1>NH 여행</h1>\r\n");
      out.write("    </header>\r\n");
      out.write("\r\n");
      out.write("    <!-- 네비게이션 -->\r\n");
      out.write("    <nav>\r\n");
      out.write("        <div class=\"left-nav\">\r\n");
      out.write("            <a href=\"Home.jsp\">홈</a>\r\n");
      out.write("            <a href=\"trippackage.jsp\">여행 패키지</a>\r\n");
      out.write("            <a href=\"CompanyIntroduction.jsp\">회사 소개</a>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"right-nav\">\r\n");
      out.write("            ");
  
                if (username == null) { 
            
      out.write("\r\n");
      out.write("                <a href=\"Login.jsp\">로그인</a>\r\n");
      out.write("                <a href=\"Register.jsp\">회원가입</a>\r\n");
      out.write("            ");
 } else { 
      out.write("\r\n");
      out.write("                <a href=\"MyPage.jsp\"> ");
      out.print( username );
      out.write("님의 마이페이지</a>\r\n");
      out.write("                <a href=\"LogoutServlet\">로그아웃</a>\r\n");
      out.write("            ");
 } 
      out.write("\r\n");
      out.write("            <div class=\"dropdown\">\r\n");
      out.write("                <a href=\"#\">게시판</a>\r\n");
      out.write("                <div class=\"dropdown-content\">\r\n");
      out.write("                    <a href=\"Notice.jsp\">공지사항</a>\r\n");
      out.write("                    <a href=\"OneToOne.jsp\">1:1문의</a>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </nav>\r\n");
      out.write("\r\n");
      out.write("    <!-- 섹션 -->\r\n");
      out.write("    <section>\r\n");
      out.write("        <h2>게시판</h2>\r\n");
      out.write("        <form id=\"postForm\" action=\"DeleteServlet\" method=\"post\" onsubmit=\"return validateForm()\">\r\n");
      out.write("            <table>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th>선택</th>\r\n");
      out.write("                    <th>번호</th>\r\n");
      out.write("                    <th>제목</th>\r\n");
      out.write("                    <th>작성자</th>\r\n");
      out.write("                    <th>날짜</th>\r\n");
      out.write("                    <th>조회수</th>\r\n");
      out.write("                </tr>\r\n");
      out.write("            \r\n");
      out.write("            ");

                try {
                    Class.forName("com.mysql.cj.jdbc.Driver");
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/Webtrip", "root", "skduddn99");

                    String query = "SELECT * FROM board ORDER BY id DESC";
                    PreparedStatement pst = con.prepareStatement(query);
                    ResultSet rs = pst.executeQuery();

                    while (rs.next()) {
                        String author = rs.getString("author");
                        out.println("<tr>");
                        if (username != null && username.equals(author)) {
                            out.println("<td><input type='checkbox' name='post' value='" + rs.getInt("id") + "'></td>");
                        } else {
                            out.println("<td></td>");
                        }
                        out.println("<td>" + rs.getInt("id") + "</td>");
                        out.println("<td><a href='view.jsp?id=" + rs.getInt("id") + "'>" + rs.getString("title") + "</a></td>");
                        out.println("<td>" + rs.getString("author") + "</td>");
                        out.println("<td>" + rs.getDate("date") + "</td>");
                        out.println("<td>" + rs.getInt("viewCount") + "</td>");
                        out.println("</tr>");
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
            
      out.write("\r\n");
      out.write("            </table>\r\n");
      out.write("        \r\n");
      out.write("            <div class=\"button-container\">\r\n");
      out.write("                <button class=\"button-left\" type=\"button\" onclick=\"writePost()\">글쓰기</button>\r\n");
      out.write("                <div class=\"button-right\">\r\n");
      out.write("                    <button type=\"button\" onclick=\"editPost()\">수정</button>\r\n");
      out.write("                    <button type=\"submit\" onclick=\"return deletePost()\">삭제</button>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </form>\r\n");
      out.write("    </section>\r\n");
      out.write("\r\n");
      out.write("    <!-- 푸터 -->\r\n");
      out.write("    <footer>\r\n");
      out.write("        © 2023 여행사. All Rights Reserved.\r\n");
      out.write("    </footer>\r\n");
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("        function writePost() {\r\n");
      out.write("            var username = \"");
      out.print(username);
      out.write("\";\r\n");
      out.write("            if (username == null || username == '') {\r\n");
      out.write("                alert('로그인 후 이용 가능합니다.');\r\n");
      out.write("                location.href = 'Login.jsp';\r\n");
      out.write("            } else {\r\n");
      out.write("                location.href = 'Write.jsp';\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function editPost() {\r\n");
      out.write("            var username = \"");
      out.print(username);
      out.write("\";\r\n");
      out.write("            var checkboxes = document.getElementsByName('post');\r\n");
      out.write("            var selectedPost;\r\n");
      out.write("\r\n");
      out.write("            for (var i=0, n=checkboxes.length; i<n; i++) {\r\n");
      out.write("                if (checkboxes[i].checked) {\r\n");
      out.write("                    selectedPost = checkboxes[i].value;\r\n");
      out.write("                    break;\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            if (username == null || username == '') {\r\n");
      out.write("                alert('로그인 후 이용 가능합니다.');\r\n");
      out.write("                location.href = 'Login.jsp';\r\n");
      out.write("            } else if (selectedPost == null) {\r\n");
      out.write("                alert('수정할 게시물을 선택해주세요.');\r\n");
      out.write("            } else {\r\n");
      out.write("                location.href = 'Edit.jsp?id=' + selectedPost;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function deletePost() {\r\n");
      out.write("            var username = \"");
      out.print(username);
      out.write("\";\r\n");
      out.write("            var checkboxes = document.getElementsByName('post');\r\n");
      out.write("            var selectedPost;\r\n");
      out.write("\r\n");
      out.write("            for (var i=0, n=checkboxes.length; i<n; i++) {\r\n");
      out.write("                if (checkboxes[i].checked) {\r\n");
      out.write("                    selectedPost = checkboxes[i].value;\r\n");
      out.write("                    break;\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            if (username == null || username == '') {\r\n");
      out.write("                alert('로그인 후 이용 가능합니다.');\r\n");
      out.write("                location.href = 'Login.jsp';\r\n");
      out.write("                return false;\r\n");
      out.write("            } else if (selectedPost == null) {\r\n");
      out.write("                alert('삭제할 게시물을 선택해주세요.');\r\n");
      out.write("                return false;\r\n");
      out.write("            } else {\r\n");
      out.write("                return confirm('선택한 게시물을 삭제하시겠습니까?');\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function validateForm() {\r\n");
      out.write("            var checkboxes = document.getElementsByName('post');\r\n");
      out.write("            var selectedPost;\r\n");
      out.write("\r\n");
      out.write("            for (var i=0, n=checkboxes.length; i<n; i++) {\r\n");
      out.write("                if (checkboxes[i].checked) {\r\n");
      out.write("                    selectedPost = checkboxes[i].value;\r\n");
      out.write("                    break;\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            if (selectedPost == null) {\r\n");
      out.write("                alert('삭제할 게시물을 선택해주세요.');\r\n");
      out.write("                return false;\r\n");
      out.write("            } else {\r\n");
      out.write("                return true;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
